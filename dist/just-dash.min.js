(()=>{function s(r){return typeof r=="function"}function o(r){return Array.isArray(r)}function b(r){return typeof r=="number"}function l(r){return b(r)&&r>=0&&r%1===0}function n(r,t=[]){if(!s(r))throw new Error("First argument (target) must be a function");if(!o(t))throw new Error("Second argument (validators) must be an array");let e=r.length,i=e===0&&t.length===1;if(t.length!==e&&!i)throw new Error(`The number of validators (${t.length}) must be equal to the number of function arguments (${r.length})`);return function(...u){for(let f=0;f<t.length;f+=1){let m=i?t[t.length-1]:t[f];if(!s(m))throw new Error(`Validator at index ${f} must be a function`);let A=i?u:u[f];if(!m(A))throw new Error(`Validator at index ${f} failed`)}return r(...u)}}var p=[r=>{if(!o(r))throw new Error("Input must be an array");return!0},r=>{if(!l(r))throw new Error("Size must be a positive whole number");return!0}];function E(r,t){if(t===0)return r.map(()=>[]);let e=Array(Math.ceil(r.length/t));for(let i=0,a=0;i<r.length;i+=t,a+=1)e[a]=r.slice(i,i+t);return e}var S=n(E,p);var c=new Set([!1,0,"",null,void 0,NaN]),h=[r=>{if(!o(r))throw new Error("Input must be an array");return!0}];function N(r){let t=[];for(let e=0;e<r.length;e+=1)c.has(r[e])||t.push(r[e]);return t}var k=n(N,h);var d=[r=>{if(!o(r))throw new Error("src must be an array");return!0},r=>{if(!o(r))throw new Error("target must be an array");return!0}];function q(r,t){if(t.length===0)return[...r];let e=new Set(t),i=[];for(let a=0;a<r.length;a+=1)e.has(r[a])||i.push(r[a]);return i}var I=n(q,d);var w=[r=>{if(!o(r))throw new Error("Input must be an array");return!0}];function $(r){let t=[];for(let e=0;e<r.length;e+=1)Array.isArray(r[e])?t.push(...r[e]):t.push(r[e]);return t}var D=n($,w);var y=[r=>{if(!o(r))throw new Error("Input must be an array");return!0}];function V(r){let t=[];for(let e=0;e<r.length;e+=1)Array.isArray(r[e])?t.push(...V(r[e])):t.push(r[e]);return t}var F=n(V,y);var x=[r=>{if(!o(r))throw new Error("src must be an array");return!0},r=>{if(!o(r))throw new Error("target must be an array");return!0}];function P(r,t){if(t.length===0||r.length===0)return[];let e=new Set(t),i=new Set;for(let a=0;a<r.length;a+=1)e.has(r[a])&&i.add(r[a]);return[...i]}var W=n(P,x);var g=[r=>{if(!o(r))throw new Error("Input must be an array");return!0}];function j(r){return Array.from(new Set(r))}var L=n(j,g);})();

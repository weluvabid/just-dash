(()=>{function f(t){return typeof t=="function"}function o(t){return Array.isArray(t)}function x(t){return typeof t=="number"}function m(t){return x(t)&&t>=0&&t%1===0}function n(t,r=[]){if(!f(t))throw new Error("First argument (target) must be a function");if(!o(r))throw new Error("Second argument (validators) must be an array");let e=t.length;if(r.length!==e)throw new Error(`The number of validators (${r.length}) must be equal to the number of function arguments (${t.length})`);return function(...a){for(let i=0;i<r.length;i+=1){let l=r[i];if(!f(l))throw new Error(`Validator at index ${i} must be a function`);if(!l(a[i]))throw new Error(`Validator at index ${i} failed`)}return t(...a)}}var s=[t=>{if(!o(t))throw new Error("Input must be an array");return!0},t=>{if(!m(t))throw new Error("Size must be a positive whole number");return!0}];function b(t,r){if(r===0)return t.map(()=>[]);let e=Array(Math.ceil(t.length/r));for(let u=0,a=0;u<t.length;u+=r,a+=1)e[a]=t.slice(u,u+r);return e}var A=n(b,s);var p=new Set([!1,0,"",null,void 0,NaN]),h=[t=>{if(!o(t))throw new Error("Input must be an array");return!0}];function V(t){let r=[];for(let e=0;e<t.length;e+=1)p.has(t[e])||r.push(t[e]);return r}var g=n(V,h);var c=[t=>{if(!o(t))throw new Error("Input must be an array");return!0}];function y(t){let r=[];for(let e=0;e<t.length;e+=1)Array.isArray(t[e])?r.push(...t[e]):r.push(t[e]);return r}var E=n(y,c);var d=[t=>{if(!o(t))throw new Error("Input must be an array");return!0}];function w(t){let r=[];for(let e=0;e<t.length;e+=1)Array.isArray(t[e])?r.push(...w(t[e])):r.push(t[e]);return r}var k=n(w,d);})();

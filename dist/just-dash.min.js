(()=>{function m(r){return typeof r=="function"}function o(r){return Array.isArray(r)}function A(r){return typeof r=="number"}function s(r){return A(r)&&r>=0&&r%1===0}function n(r,t=[]){if(!m(r))throw new Error("First argument (target) must be a function");if(!o(t))throw new Error("Second argument (validators) must be an array");let e=r.length,i=e===0&&t.length===1;if(t.length!==e&&!i)throw new Error(`The number of validators (${t.length}) must be equal to the number of function arguments (${r.length})`);return function(...u){for(let a=0;a<t.length;a+=1){let l=i?t[t.length-1]:t[a];if(!m(l))throw new Error(`Validator at index ${a} must be a function`);let g=i?u:u[a];if(!l(g))throw new Error(`Validator at index ${a} failed`)}return r(...u)}}var p=[r=>{if(!o(r))throw new Error("Input must be an array");return!0},r=>{if(!s(r))throw new Error("Size must be a positive whole number");return!0}];function b(r,t){if(t===0)return r.map(()=>[]);let e=Array(Math.ceil(r.length/t));for(let i=0,f=0;i<r.length;i+=t,f+=1)e[f]=r.slice(i,i+t);return e}var E=n(b,p);var c=new Set([!1,0,"",null,void 0,NaN]),h=[r=>{if(!o(r))throw new Error("Input must be an array");return!0}];function S(r){let t=[];for(let e=0;e<r.length;e+=1)c.has(r[e])||t.push(r[e]);return t}var N=n(S,h);var d=[r=>{if(!o(r))throw new Error("src must be an array");return!0},r=>{if(!o(r))throw new Error("target must be an array");return!0}];function k(r,t){if(t.length===0)return[...r];let e=new Set(t),i=[];for(let f=0;f<r.length;f+=1)e.has(r[f])||i.push(r[f]);return i}var q=n(k,d);var w=[r=>{if(!o(r))throw new Error("Input must be an array");return!0}];function I(r){let t=[];for(let e=0;e<r.length;e+=1)Array.isArray(r[e])?t.push(...r[e]):t.push(r[e]);return t}var $=n(I,w);var V=[r=>{if(!o(r))throw new Error("Input must be an array");return!0}];function x(r){let t=[];for(let e=0;e<r.length;e+=1)Array.isArray(r[e])?t.push(...x(r[e])):t.push(r[e]);return t}var D=n(x,V);var y=[r=>{if(!o(r))throw new Error("Input must be an array");return!0}];function F(r){return Array.from(new Set(r))}var P=n(F,y);})();

(()=>{function f(r){return typeof r=="function"}function e(r){return Array.isArray(r)}function V(r){return typeof r=="number"}function l(r){return V(r)&&r>=0&&r%1===0}function n(r,t=[]){if(!f(r))throw new Error("First argument (target) must be a function");if(!e(t))throw new Error("Second argument (validators) must be an array");let o=r.length;if(t.length!==o)throw new Error(`The number of validators (${t.length}) must be equal to the number of function arguments (${r.length})`);return function(...a){for(let i=0;i<t.length;i+=1){let m=t[i];if(!f(m))throw new Error(`Validator at index ${i} must be a function`);if(!m(a[i]))throw new Error(`Validator at index ${i} failed`)}return r(...a)}}var s=[r=>{if(!e(r))throw new Error("Input must be an array");return!0},r=>{if(!l(r))throw new Error("Size must be a positive whole number");return!0}];function A(r,t){if(t===0)return r.map(()=>[]);let o=Array(Math.ceil(r.length/t));for(let u=0,a=0;u<r.length;u+=t,a+=1)o[a]=r.slice(u,u+t);return o}var b=n(A,s);var p=new Set([!1,0,"",null,void 0,NaN]),h=[r=>{if(!e(r))throw new Error("Input must be an array");return!0}];function y(r){let t=[];for(let o=0;o<r.length;o+=1)p.has(r[o])||t.push(r[o]);return t}var g=n(y,h);var c=[r=>{if(!e(r))throw new Error("Input must be an array");return!0}];function E(r){let t=[];for(let o=0;o<r.length;o+=1)Array.isArray(r[o])?t.push(...r[o]):t.push(r[o]);return t}var S=n(E,c);var d=[r=>{if(!e(r))throw new Error("Input must be an array");return!0}];function w(r){let t=[];for(let o=0;o<r.length;o+=1)Array.isArray(r[o])?t.push(...w(r[o])):t.push(r[o]);return t}var k=n(w,d);var x=[r=>{if(!e(r))throw new Error("Input must be an array");return!0}];function q(r){return Array.from(new Set(r))}var I=n(q,x);})();
